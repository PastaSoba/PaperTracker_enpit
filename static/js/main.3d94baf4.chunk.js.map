{"version":3,"sources":["atoms/SemanticscholarSearch/SemanticscholarSearch.js","atoms/Viewer/Viewer.js","atoms/SemanticscholarSearch/CitationCount.js","atoms/ColorScale/ColorScale.js","App.js","reportWebVitals.js","index.js"],"names":["SemanticscholarSearch","props","handleOnClick","bind","data","authorId_list","map","author","a","b","year","doi","document","getElementById","value","fetch","then","response","json","paper","parsePaperInfo","setPaper","citations","references","sort","sortByYear","setCiteAndRef","catch","error","console","log","type","placeholder","id","this","inputvalue","onChange","onInputChange","to","onClick","React","Component","RECT_WIDTH","RECT_HEIGHT","YearRect","x","col","y","row","width","height","text","fontSize","align","verticalAlign","PaperRect","state","color","defaultcolor","clickhandler","handleCellClicked","isWrittenBySameAuthor","fill","onclick","setSameAuthorMarker","nextProps","prevState","enableGetMag","count","Math","floor","random","c","mag","min","max","relative_mag","char_c","toString","slice","MakeColorCodeFromMag","Viewer","items","i","length","push","_","intersection","enableGetCitationsMag","enableGetReferencesMag","App","qs","handleChange","handleCitationsCheck","handleReferencesCheck","handleSetCiteAndRef","handleSetPaper","event","setState","target","className","href","checked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","queryString","parse","location","search"],"mappings":"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","file":"static/js/main.3d94baf4.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * SemanticScholarSearch API を利用して論文の引用情報を取得するモジュール\r\n */\r\nclass SemanticscholarSearch extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleOnClick = this.handleOnClick.bind(this);\r\n  }\r\n\r\n  parsePaperInfo(data){\r\n    let authorId_list = data[\"authors\"].map((author)=>{return author[\"authorId\"]})\r\n    return {\r\n      \"title\": data[\"title\"],\r\n      \"url\": data[\"url\"],\r\n      \"year\": data[\"year\"],\r\n      \"doi\": data[\"doi\"],\r\n      \"authorId_list\": authorId_list,\r\n    }\r\n  }\r\n\r\n  sortByYear(a, b){\r\n    return a.year > b.year ? -1 : 1;\r\n  }\r\n\r\n  handleOnClick(){\r\n    var BASE_URL = 'https://api.semanticscholar.org/v1/paper/'\r\n    var doi = document.getElementById(\"paperdoi\").value; // 10.1145/1950413.1950462\r\n    var searchurl = BASE_URL + doi\r\n\r\n    // APIを使って検索する\r\n    fetch(searchurl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          var paper = this.parsePaperInfo(data)\r\n          this.props.setPaper(paper)\r\n          // 論文情報をパースする\r\n          var citations = data[\"citations\"].map(this.parsePaperInfo)\r\n          var references = data[\"references\"].map(this.parsePaperInfo)\r\n          // 発行年が新しい順に論文情報を並べる\r\n          citations.sort(this.sortByYear)\r\n          references.sort(this.sortByYear)\r\n          this.props.setCiteAndRef(citations, references)\r\n        }\r\n      )\r\n      .catch(error=> console.log(error))\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <p> SemanticScholar Search : </p>\r\n        <input type = \"search\" placeholder = \"調べたい論文のDOIを入力\" id = \"paperdoi\" value={this.props.inputvalue} onChange={this.props.onInputChange}/>\r\n        <Link to={\"?doi=\"+this.props.inputvalue}>\r\n          <button onClick = { this.handleOnClick }> 検索 </button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SemanticscholarSearch;","import React from \"react\"\r\nimport { Stage, Layer, Rect, Text, Group } from 'react-konva';\r\nimport _ from 'lodash';\r\nimport getPaperCitationCount from '../SemanticscholarSearch/CitationCount.js'\r\nimport MakeColorCodeFromMag from '../ColorScale/ColorScale.js'\r\n\r\nconst RECT_WIDTH = 200;  // 格子の横幅\r\nconst RECT_HEIGHT = 50;  // 格子の縦幅\r\nconst RECT_MARGIN = 15;   // 格子間の距離\r\n\r\nclass YearRect extends React.Component {\r\n  render(){\r\n    return (\r\n      <Group>\r\n        <Rect\r\n          x={(RECT_WIDTH+RECT_MARGIN)*(this.props.col+1)}\r\n          y={(RECT_HEIGHT+RECT_MARGIN)*this.props.row}\r\n          width={RECT_WIDTH}\r\n          height={RECT_HEIGHT}\r\n        />\r\n        <Text\r\n          x={(RECT_WIDTH+RECT_MARGIN)*(this.props.col+1)}\r\n          y={(RECT_HEIGHT+RECT_MARGIN)*this.props.row}\r\n          width={RECT_WIDTH}\r\n          height={RECT_HEIGHT}\r\n          text={this.props.year}\r\n          fontSize={20}\r\n          align={\"center\"}\r\n          verticalAlign={\"middle\"}\r\n          />\r\n      </Group>\r\n    )\r\n  }\r\n}\r\n\r\nclass PaperRect extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      color: this.props.defaultcolor,\r\n      citations: null // キャッシュ\r\n    }\r\n\r\n    this.clickhandler = this.clickhandler.bind(this)\r\n  }\r\n\r\n  clickhandler(){\r\n    this.props.handleCellClicked(this.props.paper[\"doi\"])\r\n  }\r\n\r\n  setSameAuthorMarker(){\r\n    let outerRect;\r\n    // 引用・被引用論文の著者の中に検索論文の著者が存在するとき\r\n    if (this.props.isWrittenBySameAuthor){\r\n      outerRect = <Rect\r\n        x={(RECT_WIDTH+RECT_MARGIN)*(this.props.col+1)-5}\r\n        y={(RECT_HEIGHT+RECT_MARGIN)*this.props.row-5}\r\n        width={RECT_WIDTH+10}\r\n        height={RECT_HEIGHT+10}\r\n        fill={'black'}\r\n      />\r\n    } else {\r\n      // 引用・被引用論文の著者の中に検索論文の著者が存在しないとき\r\n      outerRect = null;\r\n    }\r\n    return outerRect\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n    // 「引用論文の影響度を可視化する」にチェックが入っていないときの処理\r\n    if (!nextProps.enableGetMag) {\r\n      return { color: nextProps.defaultcolor }\r\n    }\r\n\r\n    // 「引用論文の影響度を可視化する」にチェックが入ったときの処理\r\n    // TODO: なぜstate.citationsに値がキャッシュされているのか分からない。そんな記述は書いていないはずだが\r\n    let count = prevState.citations == null ? getPaperCitationCount(nextProps.paper[\"doi\"]) : prevState.citations;\r\n    let c = MakeColorCodeFromMag(count, 0, 50);\r\n    switch (nextProps.defaultcolor){\r\n      case \"lightgreen\":\r\n        return {\r\n          citations: count,\r\n          color: \"#\"+c+\"FF\"+c\r\n        }\r\n      default:                // case \"lightpink\":\r\n        return {\r\n          citations: count,\r\n          color: \"#FF\"+c+c\r\n        }\r\n      }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Group onclick={ this.clickhandler }>\r\n        {this.setSameAuthorMarker()}\r\n        <Rect\r\n          x={(RECT_WIDTH+RECT_MARGIN)*(this.props.col+1)}\r\n          y={(RECT_HEIGHT+RECT_MARGIN)*this.props.row}\r\n          width={RECT_WIDTH}\r\n          height={RECT_HEIGHT}\r\n          fill={this.state.color}\r\n        />\r\n        <Text\r\n          x={(RECT_WIDTH+RECT_MARGIN)*(this.props.col+1)}\r\n          y={(RECT_HEIGHT+RECT_MARGIN)*this.props.row}\r\n          width={RECT_WIDTH}\r\n          height={RECT_HEIGHT}\r\n          text={this.props.paper[\"title\"]}\r\n          />\r\n      </Group>\r\n    )\r\n  }\r\n}\r\n\r\nclass Viewer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Stage width={3000} height={3000}>\r\n      <Layer>\r\n        {/* 各論文セルをグリッド状にして可視化する部分 */}\r\n        {(() => {\r\n          const items = [];\r\n          let row = 0; let col = 0; // 論文セル表示位置\r\n\r\n          /*\r\n          citationsについての可視化部分\r\n          */\r\n          let citations = this.props.citations;\r\n          for(let i=0; i<citations.length; i++) {\r\n            if(i===0){\r\n              items.push(\r\n                <YearRect year={citations[i][\"year\"]} row={row} col={-1}/>\r\n              );\r\n            } else if(citations[i][\"year\"] === citations[i-1][\"year\"]) {\r\n              col++                // 列を1つ左にずらす\r\n            } else {\r\n              col = 0; row++;      // 行を1つ増やす\r\n              items.push(\r\n                <YearRect year={citations[i][\"year\"]} row={row} col={-1}/>\r\n              );\r\n            }\r\n\r\n            let isWrittenBySameAuthor = _.intersection(\r\n              this.props.paper[\"authorId_list\"],\r\n              this.props.citations[i][\"authorId_list\"]).length > 0;\r\n            items.push(\r\n              // 各論文データ\r\n              <PaperRect \r\n                paper={citations[i]}\r\n                row={row}\r\n                col={col}\r\n                defaultcolor={'lightgreen'}\r\n                isWrittenBySameAuthor={isWrittenBySameAuthor}\r\n                handleCellClicked={this.props.handleCellClicked}\r\n                enableGetMag={this.props.enableGetCitationsMag}\r\n              />\r\n            );\r\n          }\r\n\r\n          /*\r\n          referencesについての可視化部分\r\n          */\r\n          let references = this.props.references;\r\n          col = 0; row+=2;\r\n          for(let i=0; i<references.length; i++) {\r\n            if(i===0){\r\n              items.push(\r\n                <YearRect year={references[i][\"year\"]} row={row} col={-1}/>\r\n              );\r\n            } else if(references[i][\"year\"] === references[i-1][\"year\"]) {\r\n              col++                // 列を1つ左にずらす\r\n            } else {\r\n              col = 0; row++;      // 行を1つ増やす\r\n              items.push(\r\n                <YearRect year={references[i][\"year\"]} row={row} col={-1}/>\r\n              );\r\n            }\r\n\r\n            let isWrittenBySameAuthor = _.intersection(\r\n              this.props.paper[\"authorId_list\"],\r\n              this.props.references[i][\"authorId_list\"]).length > 0;\r\n            items.push(\r\n              <PaperRect \r\n                paper={references[i]}\r\n                row={row}\r\n                col={col}\r\n                defaultcolor={'lightpink'}\r\n                isWrittenBySameAuthor={isWrittenBySameAuthor}\r\n                handleCellClicked={this.props.handleCellClicked}\r\n                enableGetMag={this.props.enableGetReferencesMag}\r\n              />\r\n            );\r\n          }\r\n          return items\r\n        })()}\r\n      </Layer>\r\n      </Stage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Viewer;","export default function getPaperCitationCount(doi){\r\n    // var search_url = 'https://api.semanticscholar.org/v1/paper/' + doi\r\n  \r\n    /* Searching through API \r\n    */\r\n    // fetch(search_url)\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //       console.log(\"citations:\" + data[\"citations\"])\r\n    //       return Math.floor(Math.random()*201)\r\n    //     }\r\n    //   )\r\n    //   .catch(error=> console.log(error))\r\n    return Math.floor(Math.random()*201)\r\n  }","export default function MakeColorCodeFromMag(mag, min, max){\r\n    /*\r\n        minからmaxの中で、magがどのくらい大きいのかを\r\n        評価し、カラーコードを返す。\r\n    */\r\n    let relative_mag = (mag-min)/(max-min);\r\n    let int_c = Math.floor(relative_mag * 255);\r\n    let char_c = int_c.toString(16);\r\n\r\n    char_c = ('00' + char_c).slice(-2)\r\n    return char_c\r\n}","import './App.css';\r\nimport React from \"react\"\r\n\r\nimport SemanticscholarSearch from \"./atoms/SemanticscholarSearch/SemanticscholarSearch\"\r\nimport Viewer from \"./atoms/Viewer/Viewer\"\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      inputvalue: this.props.qs.doi,  // 検索フォームに入力されている値\r\n      paper: null,\r\n      citations: [],\r\n      references: [],\r\n      enableGetCitationsMag: false,  // 引用論文の影響度を調べる\r\n      enableGetReferencesMag: false, // 参考論文の影響度を調べる\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleCitationsCheck = this.handleCitationsCheck.bind(this)\r\n    this.handleReferencesCheck = this.handleReferencesCheck.bind(this)\r\n    this.handleSetCiteAndRef = this.handleSetCiteAndRef.bind(this)\r\n    this.handleSetPaper = this.handleSetPaper.bind(this)\r\n    this.handleCellClicked = this.handleCellClicked.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    // 検索フォームにdoiが入力されているときの動作\r\n    this.setState({\r\n      inputvalue: event.target.value\r\n    });\r\n  }\r\n\r\n  handleCitationsCheck(){\r\n    this.setState({\r\n      enableGetCitationsMag: !this.state.enableGetCitationsMag\r\n    })\r\n  }\r\n\r\n  handleReferencesCheck(){\r\n    this.setState({\r\n      enableGetReferencesMag: !this.state.enableGetReferencesMag\r\n    })\r\n  }\r\n\r\n  handleSetCiteAndRef(citations, references){\r\n    this.setState({\r\n      citations: citations,\r\n      references: references,\r\n    })\r\n  }\r\n\r\n  handleSetPaper(paper){\r\n    this.setState({\r\n      paper: paper,\r\n    })\r\n  }\r\n\r\n  handleCellClicked(doi){\r\n    this.setState({\r\n      inputvalue: doi,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Paper Tracker</h1>\r\n          <div>\r\n            <SemanticscholarSearch\r\n              setPaper={this.handleSetPaper}\r\n              setCiteAndRef={this.handleSetCiteAndRef}\r\n              onInputChange={this.handleChange}\r\n              inputvalue={this.state.inputvalue}\r\n            />\r\n            <div>\r\n              検索論文名: \r\n              <a href={this.state.paper === null ? \"\" : this.state.paper[\"url\"]}>\r\n                {this.state.paper === null ? \"\" : this.state.paper[\"title\"]}\r\n              </a>\r\n            </div>\r\n            <div>\r\n              オプション（デモ動作）<br/>\r\n              <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={this.handleCitationsCheck}\r\n                checked={this.state.enableGetCitationsMag}\r\n              />\r\n              被引用論文の影響度を可視化する\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={this.handleReferencesCheck}\r\n                  checked={this.state.enableGetReferencesMag}\r\n                />\r\n                引用論文の影響度を可視化する\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <Viewer\r\n            paper={this.state.paper}\r\n            citations={this.state.citations}\r\n            references={this.state.references}\r\n            enableGetCitationsMag={this.state.enableGetCitationsMag}\r\n            enableGetReferencesMag={this.state.enableGetReferencesMag}\r\n            handleCellClicked={this.handleCellClicked}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Route render={(props) => \r\n        <App \r\n          qs={queryString.parse(props.location.search)}\r\n        />\r\n      }/>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}